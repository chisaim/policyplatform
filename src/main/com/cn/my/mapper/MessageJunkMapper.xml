<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.my.mapper.MessageJunkMapper">
	<resultMap id="BaseResultMap" type="com.cn.my.model.MessageJunk">
		<id column="junk_id" property="junk_id" jdbcType="INTEGER" />
		<result column="msg_id" property="msg_id" jdbcType="VARCHAR" />
		<result column="monitoredtime" property="monitoredtime"
			jdbcType="TIMESTAMP" />
		<result column="callerid" property="callerid" jdbcType="VARCHAR" />
		<result column="calledid" property="calledid" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="inspect_info" property="inspect_info" jdbcType="VARCHAR" />
		<result column="servicetype" property="servicetype" jdbcType="INTEGER" />
		<result column="inspect_level" property="inspect_level"
			jdbcType="INTEGER" />
		<result column="contentmd5" property="contentmd5" jdbcType="VARCHAR" />
		<result column="contentsimhash" property="contentsimhash"
			jdbcType="VARCHAR" />
		<result column="repeatcount" property="repeatcount" jdbcType="INTEGER" />
		<result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
		<result column="advertiser" property="advertiser" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="content_origin" property="content_origin"
			jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		junk_id, msg_id, monitoredtime, callerid, calledid, content, inspect_info,
		servicetype,
		inspect_level, contentmd5, contentsimhash, repeatcount, createdtime, advertiser,
		status, content_origin
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sms_junk
		where junk_id = #{junk_id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sms_junk
		where junk_id = #{junk_id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.cn.my.model.MessageJunk">
		insert into sms_junk (junk_id, msg_id, monitoredtime,
		callerid, calledid, content,
		inspect_info, servicetype, inspect_level,
		contentmd5, contentsimhash, repeatcount,
		createdtime, advertiser, status,
		content_origin)
		values (#{junk_id,jdbcType=INTEGER}, #{msg_id,jdbcType=VARCHAR},
		#{monitoredtime,jdbcType=TIMESTAMP},
		#{callerid,jdbcType=VARCHAR}, #{calledid,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
		#{inspect_info,jdbcType=VARCHAR}, #{servicetype,jdbcType=INTEGER},
		#{inspect_level,jdbcType=INTEGER},
		#{contentmd5,jdbcType=VARCHAR}, #{contentsimhash,jdbcType=VARCHAR}, #{repeatcount,jdbcType=INTEGER},
		#{createdtime,jdbcType=TIMESTAMP}, #{advertiser,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{content_origin,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.cn.my.model.MessageJunk">
		insert into sms_junk
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="junk_id != null">
				junk_id,
			</if>
			<if test="msg_id != null">
				msg_id,
			</if>
			<if test="monitoredtime != null">
				monitoredtime,
			</if>
			<if test="callerid != null">
				callerid,
			</if>
			<if test="calledid != null">
				calledid,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="inspect_info != null">
				inspect_info,
			</if>
			<if test="servicetype != null">
				servicetype,
			</if>
			<if test="inspect_level != null">
				inspect_level,
			</if>
			<if test="contentmd5 != null">
				contentmd5,
			</if>
			<if test="contentsimhash != null">
				contentsimhash,
			</if>
			<if test="repeatcount != null">
				repeatcount,
			</if>
			<if test="createdtime != null">
				createdtime,
			</if>
			<if test="advertiser != null">
				advertiser,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="content_origin != null">
				content_origin,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="junk_id != null">
				#{junk_id,jdbcType=INTEGER},
			</if>
			<if test="msg_id != null">
				#{msg_id,jdbcType=VARCHAR},
			</if>
			<if test="monitoredtime != null">
				#{monitoredtime,jdbcType=TIMESTAMP},
			</if>
			<if test="callerid != null">
				#{callerid,jdbcType=VARCHAR},
			</if>
			<if test="calledid != null">
				#{calledid,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="inspect_info != null">
				#{inspect_info,jdbcType=VARCHAR},
			</if>
			<if test="servicetype != null">
				#{servicetype,jdbcType=INTEGER},
			</if>
			<if test="inspect_level != null">
				#{inspect_level,jdbcType=INTEGER},
			</if>
			<if test="contentmd5 != null">
				#{contentmd5,jdbcType=VARCHAR},
			</if>
			<if test="contentsimhash != null">
				#{contentsimhash,jdbcType=VARCHAR},
			</if>
			<if test="repeatcount != null">
				#{repeatcount,jdbcType=INTEGER},
			</if>
			<if test="createdtime != null">
				#{createdtime,jdbcType=TIMESTAMP},
			</if>
			<if test="advertiser != null">
				#{advertiser,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="content_origin != null">
				#{content_origin,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.my.model.MessageJunk">
		update sms_junk
		<set>
			<if test="msg_id != null">
				msg_id = #{msg_id,jdbcType=VARCHAR},
			</if>
			<if test="monitoredtime != null">
				monitoredtime = #{monitoredtime,jdbcType=TIMESTAMP},
			</if>
			<if test="callerid != null">
				callerid = #{callerid,jdbcType=VARCHAR},
			</if>
			<if test="calledid != null">
				calledid = #{calledid,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="inspect_info != null">
				inspect_info = #{inspect_info,jdbcType=VARCHAR},
			</if>
			<if test="servicetype != null">
				servicetype = #{servicetype,jdbcType=INTEGER},
			</if>
			<if test="inspect_level != null">
				inspect_level = #{inspect_level,jdbcType=INTEGER},
			</if>
			<if test="contentmd5 != null">
				contentmd5 = #{contentmd5,jdbcType=VARCHAR},
			</if>
			<if test="contentsimhash != null">
				contentsimhash = #{contentsimhash,jdbcType=VARCHAR},
			</if>
			<if test="repeatcount != null">
				repeatcount = #{repeatcount,jdbcType=INTEGER},
			</if>
			<if test="createdtime != null">
				createdtime = #{createdtime,jdbcType=TIMESTAMP},
			</if>
			<if test="advertiser != null">
				advertiser = #{advertiser,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="content_origin != null">
				content_origin = #{content_origin,jdbcType=VARCHAR},
			</if>
		</set>
		where junk_id = #{junk_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.my.model.MessageJunk">
		update sms_junk
		set msg_id = #{msg_id,jdbcType=VARCHAR},
		monitoredtime = #{monitoredtime,jdbcType=TIMESTAMP},
		callerid = #{callerid,jdbcType=VARCHAR},
		calledid = #{calledid,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		inspect_info = #{inspect_info,jdbcType=VARCHAR},
		servicetype = #{servicetype,jdbcType=INTEGER},
		inspect_level = #{inspect_level,jdbcType=INTEGER},
		contentmd5 = #{contentmd5,jdbcType=VARCHAR},
		contentsimhash = #{contentsimhash,jdbcType=VARCHAR},
		repeatcount = #{repeatcount,jdbcType=INTEGER},
		createdtime = #{createdtime,jdbcType=TIMESTAMP},
		advertiser = #{advertiser,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		content_origin = #{content_origin,jdbcType=VARCHAR}
		where junk_id = #{junk_id,jdbcType=INTEGER}
	</update>

	<sql id="Count_Column_List">
		junk_id, msg_id, callerid, calledid, content, servicetype, inspect_level,
		repeatcount, createdtime, advertiser, content_origin
	</sql>

	<select id="getMessageJunk" resultType="com.cn.my.model.MessageJunk">
		select
		<include refid="Count_Column_List" />
		from sms_junk where status = 0 and createdtime &gt; #{from} and
		createdtime &lt; #{to}
		<if test="inspect_level!=null"> and inspect_level = #{inspect_level}</if>
		order by createdtime limit #{limit}
	</select>

	<update id="updateStatus" parameterType="java.util.List">
		update sms_junk set status = 1 where junk_id in
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

	<resultMap type="com.cn.my.model.MessageJunk" id="hashmapMessageJunk">
		<result column="junk_id" property="junk_id" jdbcType="INTEGER" />
		<result column="msg_id" property="msg_id" jdbcType="VARCHAR" />
		<result column="monitoredtime" property="monitoredtime"
			jdbcType="TIMESTAMP" />
		<result column="callerid" property="callerid" jdbcType="VARCHAR" />
		<result column="calledid" property="calledid" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="inspect_info" property="inspect_info" jdbcType="VARCHAR" />
		<result column="servicetype" property="servicetype" jdbcType="INTEGER" />
		<result column="inspect_level" property="inspect_level"
			jdbcType="INTEGER" />
		<result column="contentmd5" property="contentmd5" jdbcType="VARCHAR" />
		<result column="contentsimhash" property="contentsimhash"
			jdbcType="VARCHAR" />
		<result column="repeatcount" property="repeatcount" jdbcType="INTEGER" />
		<result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
		<result column="advertiser" property="advertiser" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="content_origin" property="content_origin"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="queryMessageJunkByAuditedMsgId" parameterType="com.cn.my.model.MessageAudited"
		resultMap="hashmapMessageJunk">
		select junk_id, msg_id, monitoredtime, callerid, calledid, content,
		inspect_info, servicetype,
		inspect_level, contentmd5, contentsimhash, repeatcount, createdtime,
		advertiser,status, content_origin
		from sms_junk where msg_id in
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item.msg_id}
		</foreach>
	</select>

	<delete id="batchDeleteData" parameterType="com.cn.my.model.MessageAudited">
		delete from sms_junk where status=1 and msg_id in
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item.msg_id}
		</foreach>
	</delete>
	
	<select id="countNeedAuditNum" resultType="int">
		select count(junk_id) from sms_junk where status=0
	</select>
	
	<select id="countAllMessageJunk" resultType="int">
		select count(junk_id) from sms_junk where createdtime &gt; #{from} and createdtime &lt; #{to} 
    	<if test="inspect_level!=null">and inspect_level = #{inspect_level} </if>
    	and status=0
	</select>
	
	<select id="queryMessageJunkByCondition" resultType="com.cn.my.model.MessageJunk">
		select 
  			<include refid="Base_Column_List" />
    	from sms_junk where createdtime &gt; #{from} and createdtime &lt; #{to} and status=0
    	<if test="inspect_level!=null">and inspect_level = #{inspect_level} </if>
    	limit #{page},#{limit}
	</select>
	
	<update id="resetJunkSms">
		update sms_junk set status = 0 
	</update>
</mapper>